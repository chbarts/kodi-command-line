#!/usr/bin/env zsh

kodi_loc='rpi4:8080'

if [[ $# -eq 0 ]]; then
    echo "usage: $0 [MEDIA-FILE-NAME|YOUTUBE-URL] or $0 -y YOUTUBE-VIDEO-ID"
    exit 0
fi

if [[ ($# -eq 2) && ($1 == '-y') ]]; then
    curl -X POST -H 'Content-Type: application/json' http://$kodi_loc/jsonrpc\?awx --data-ascii  '{"jsonrpc": "2.0", "method": "Player.Open", "params" : { "item" : { "file" : "plugin://plugin.video.youtube/?path=/root/video&action=play_video&videoid='$2'"}, "options": { "resume": false } }, "id": 1}'
    exit 0
fi

if [[ "$@" =~ '^[[:alpha:]]+://' ]]; then    
# https://stackoverflow.com/questions/19377262/regex-for-youtube-url
    videoid=$(echo "$@" | perl -ne 'if (m/(?:https?:\/\/)?(?:youtu\.be\/|(?:www\.)?youtube\.com\/watch(?:\.php)?\?.*v=)([a-zA-Z0-9\-_]+)/) { print "$1\n" }')
    if [[ $videoid ]]; then
        curl -X POST -H 'Content-Type: application/json' http://$kodi_loc/jsonrpc\?awx --data-ascii  '{"jsonrpc": "2.0", "method": "Player.Open", "params" : { "item" : { "file" : "plugin://plugin.video.youtube/?path=/root/video&action=play_video&videoid='$videoid'"}, "options": { "resume": false } }, "id": 1}'
        exit 0
    fi
    
    curl -X POST -H 'Content-Type: application/json' http://$kodi_loc/jsonrpc\?awx --data-ascii  '{"jsonrpc": "2.0", "method": "Player.Open", "params" : { "item" : { "file" : "'"$2"'"}, "options": { "resume": false } }, "id": 1}'
    exit 0
fi

ext=${@##*.}

if [[ $ext = 'url' ]]; then
    url=$(cat "$@")
    curl -X POST -H 'Content-Type: application/json' http://$kodi_loc/jsonrpc\?awx --data-ascii  '{"jsonrpc": "2.0", "method": "Player.Open", "params" : { "item" : { "file" : "'$url'"}, "options": { "resume": false } }, "id": 1}'
    exit 0
fi

tnam=$(mktemp "kodi-play-XXXXXX.$ext")

if [[ -h ~/video/"kodi-play-*.$ext" ]]; then
    rm ~/video/"kodi-play-*.$ext"
fi

if [[ -e ~/video/"kodi-play-*.$ext" ]]; then
    echo "$0: Temp file exists and is not a symbolic link" > /dev/stderr
    exit 1
fi

ln -s "$(realpath -- "$@")" ~/video/$tnam

# https://stackoverflow.com/questions/13322485/how-to-get-the-primary-ip-address-of-the-local-machine-on-linux-and-os-x
myIP=$(ip -o route get to 8.8.8.8 | sed -n 's/.*src \([0-9.]\+\).*/\1/p')

curl -X POST -H 'Content-Type: application/json' http://$kodi_loc/jsonrpc\?awx --data-ascii  '{"jsonrpc": "2.0", "method": "Player.Open", "params" : { "item" : { "file" : "smb://'$myIP'/public/'$tnam'"}, "options": { "resume": false } }, "id": 1}'
